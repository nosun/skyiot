<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
   <meta http-equiv="content-type" content="text/html;charset=UTF-8">
   <style type="text/css">
   /* GitHub stylesheet for MarkdownPad (http://markdownpad.com) */
/* Author: Nicolas Hery - http://nicolashery.com */
/* Version: b13fe65ca28d2e568c6ed5d7f06581183df8f2ff */
/* Source: https://github.com/nicolahery/markdownpad-github */

/* RESET
=============================================================================*/

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
}

/* BODY
=============================================================================*/

body {
  font-family: Helvetica, arial, freesans, clean, sans-serif;
  font-size: 14px;
  line-height: 1.6;
  color: #333;
  background-color: #fff;
  padding: 20px;
  max-width: 960px;
  margin: 0 auto;
}

body>*:first-child {
  margin-top: 0 !important;
}

body>*:last-child {
  margin-bottom: 0 !important;
}

/* BLOCKS
=============================================================================*/

p, blockquote, ul, ol, dl, table, pre {
  margin: 15px 0;
}

/* HEADERS
=============================================================================*/

h1, h2, h3, h4, h5, h6 {
  margin: 20px 0 10px;
  padding: 0;
  font-weight: bold;
  -webkit-font-smoothing: antialiased;
}

h1 tt, h1 code, h2 tt, h2 code, h3 tt, h3 code, h4 tt, h4 code, h5 tt, h5 code, h6 tt, h6 code {
  font-size: inherit;
}

h1 {
  font-size: 28px;
  color: #000;
  border-bottom:2px solid #ccc;
  margin-bottom:20px;
}

h2 {
  font-size: 24px;
  border-bottom: 1px solid #ccc;
  color: #000;
}

h3 {
  font-size: 18px;
}

h4 {
  font-size: 16px;
}

h5 {
  font-size: 14px;
}

h6 {
  color: #777;
  font-size: 14px;
}

body>h2:first-child, body>h1:first-child, body>h1:first-child+h2, body>h3:first-child, body>h4:first-child, body>h5:first-child, body>h6:first-child {
  margin-top: 0;
  padding-top: 0;
}

a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 {
  margin-top: 0;
  padding-top: 0;
}

h1+p, h2+p, h3+p, h4+p, h5+p, h6+p {
  margin-top: 10px;
}

/* LINKS
=============================================================================*/

a {
  color: #4183C4;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

/* LISTS
=============================================================================*/

ul, ol {
  padding-left: 30px;
}

ul li > :first-child, 
ol li > :first-child, 
ul li ul:first-of-type, 
ol li ol:first-of-type, 
ul li ol:first-of-type, 
ol li ul:first-of-type {
  margin-top: 0px;
}

ul ul, ul ol, ol ol, ol ul {
  margin-bottom: 0;
}

dl {
  padding: 0;
}

dl dt {
  font-size: 14px;
  font-weight: bold;
  font-style: italic;
  padding: 0;
  margin: 15px 0 5px;
}

dl dt:first-child {
  padding: 0;
}

dl dt>:first-child {
  margin-top: 0px;
}

dl dt>:last-child {
  margin-bottom: 0px;
}

dl dd {
  margin: 0 0 15px;
  padding: 0 15px;
}

dl dd>:first-child {
  margin-top: 0px;
}

dl dd>:last-child {
  margin-bottom: 0px;
}

/* CODE
=============================================================================*/

pre, code, tt {
  font-size: 12px;
  font-family: Consolas, "Liberation Mono", Courier, monospace;
}

code, tt {
  margin: 0 0px;
  padding: 0px 0px;
  white-space: nowrap;
  border: 1px solid #e1e1e8;
  background-color: #f7f7f9;
  border-radius: 3px;
}

code{
  padding:2px 4px;
  border-radius:3px;
}

pre>code {
  margin: 0;
  padding: 0;
  white-space: pre;
  border: none;
  background: transparent;
}

pre {
  background-color: #f8f8f8;
  border: 1px solid #ccc;
  font-size: 13px;
  line-height: 19px;
  overflow: auto;
  padding: 6px 10px;
  border-radius: 3px;
}

pre code, pre tt {
  background-color: transparent;
  border: none;
}

kbd {
    -moz-border-bottom-colors: none;
    -moz-border-left-colors: none;
    -moz-border-right-colors: none;
    -moz-border-top-colors: none;
    background-color: #DDDDDD;
    background-image: linear-gradient(#F1F1F1, #DDDDDD);
    background-repeat: repeat-x;
    border-color: #DDDDDD #CCCCCC #CCCCCC #DDDDDD;
    border-image: none;
    border-radius: 2px 2px 2px 2px;
    border-style: solid;
    border-width: 1px;
    font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
    line-height: 10px;
    padding: 1px 4px;
}

/* QUOTES
=============================================================================*/

blockquote {
  border-left: 4px solid #DDD;
  padding: 0 15px;
  color: #777;
}

blockquote>:first-child {
  margin-top: 0px;
}

blockquote>:last-child {
  margin-bottom: 0px;
}

/* HORIZONTAL RULES
=============================================================================*/

hr {
  clear: both;
  margin: 15px 0;
  height: 0px;
  overflow: hidden;
  border: none;
  background: transparent;
  border-bottom: 4px solid #ddd;
  padding: 0;
}

/* TABLES
=============================================================================*/

table th {
  font-weight: bold;
}

table th, table td {
  border: 1px solid #ccc;
  padding: 6px 13px;
}

table tr {
  border-top: 1px solid #ccc;
  background-color: #fff;
}

table tr:nth-child(2n) {
  background-color: #f8f8f8;
}

/* IMAGES
=============================================================================*/

img {
  max-width: 100%
}

/* nosun add*/
.alarm{color:red}
h2{margin-top:40px;}
.answer {
    color: #000099;
    text-indent: 2em;
}
   </style>
   
   
</head>
<body>
    <h1>物联网云平台API V2.0.0</h1>

<pre><code>Make: nosun
Date: 2015-02-03
ver :  V2.0.0
</code></pre>

<h2>说明</h2>

<pre><code>本接口文档为思佳维云平台移动客户端接口文档，采用RESTFUL理念进行设计,
使用http协议中的GET,POST,PUT,DELETE等方式对资源进行操作，实现对资源的增删查改。
</code></pre>

<h2>错误码说明</h2>

<pre><code>400：请求参数不正确
200：响应成功
404：请求无结果
500：服务器错误
</code></pre>

<h2>用户相关</h2>

<h3>1、验证用户id</h3>

<pre><code>用户在注册之前，验证用户id是否存在，系统采用电话号码作为用户id，变量为login_id

url        : login_id
methord    : get
argument   : login_id
example    : http://c1.skyware.com.cn/api/login_id/18600364250

return 
if sucess  : {
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 404
            }
</code></pre>

<h3>2、用户注册</h3>

<pre><code>用户注册，在短信验证之后，将用户名密码发过来，进行注册，社会化登录不在此。

url        : user
methord    : post
argument   : login_id  手机号码
             login_pwd 用户密码
example    : http://c1.skyware.com.cn/api/user

return 
if sucess  : {
                &quot;login_id&quot;: &quot;18600364250&quot;,
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;login_id&quot;: &quot;18600364250&quot;,
                &quot;message&quot;: 500
            }

message: 500：未能成功添加用户
</code></pre>

<h3>3、用户登录</h3>

<pre><code>用户进行登录，这里考虑常规登录，尚未做社会化登录，用户登录之后，给返还一个token，登录之后所有的与服务器之间的交互，均需要发送token过来。

url        : token
methord    : post
argument   : login_id  手机号码
             login_pwd 用户密码
example    : http://c1.skyware.com.cn/api/token

return 
if sucess  : {
                &quot;token&quot;: &quot;*****&quot;,
                &quot;message&quot;:200
             }

if fail    :{
                &quot;message&quot;:404
            }

message: 404：用户名不存在
         500：用户名密码错误            
</code></pre>

<h3>4、用户退出</h3>

<pre><code>用户退出，在客户端做判断即可，删除本地token，然后调回登录页面，如果找不到token，自动跳转到登录页面。
</code></pre>

<h3>5、获取用户信息</h3>

<pre><code>用户发送token，获取用户的基本信息，目前可能有部分信息缺少，请补充一下。

url        : user/$token
methord    : get
argument   : $token 登录时服务器给返回的token
example    : http://c1.skyware.com.cn/api/user/$token

return 
if sucess  : 
            {
                &quot;result&quot;: [
                    {
                        &quot;login_id&quot;: &quot;18600364250&quot;,
                        &quot;user_name&quot;: &quot;nosun&quot;,
                        &quot;user_img&quot;: &quot;http://c1.skyware.com.cn/uploads/201502/99e521bfc7d2851f0f6cc7f7fcdc85bb.jpg&quot;,
                        &quot;user_email&quot;: &quot;nosun@nosun.cn&quot;,
                        &quot;user_phone&quot;: &quot;18600364250&quot;,
                        &quot;notice_pm&quot;: &quot;1&quot;,
                        &quot;notice_pm_value&quot;: &quot;80&quot;,
                        &quot;notice_filter&quot;: &quot;1&quot;
                    }
                ],
                &quot;message&quot;: 200
            }

if fail    :{
                &quot;message&quot;: 404
            }

message: 404：用户名不存在    
</code></pre>

<h3>6、修改用户信息</h3>

<pre><code>修改用户的基本信息。

url        : user/$token
methord    : put
argument   : $token 登录时服务器给返回的token
example    : http://c1.skyware.com.cn/api/user/$token
需要修改的字段 放在put中，目前支持修改的字段如下：
        user_name
        user_phone
        user_email
        user_img
        notice_filter
        notice_pm
        notice_pm_value

return 
if sucess  : {
                &quot;result&quot;: Json,
                &quot;message&quot;: 200
             }
             http code :200;

if fail    :{
                &quot;message&quot;: 500
            }
             http code :200;

message: 400：参数错误
         500：服务器错误    
</code></pre>

<h3>7、修改用户密码</h3>

<pre><code>修改用户密码，将token和用户密码传过来

url        : passwd
methord    : put
argument   : login_pwd     [put 参数]
             token         [put 参数]
             login_pwd_old [put 参数]

example    : http://c1.skyware.com.cn/api/passwd
return 
if sucess  : {
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 500
            }

message: 400：参数错误
         500：服务器错误
         404：旧密码不正确    
</code></pre>

<h3>8、找回用户密码</h3>

<pre><code>找回用户密码，将login_id和用户密码传过来

url        : passwd
methord    : post
argument   : login_pwd  [post 参数]
             login_id   [post 参数]
example    : http://c1.skyware.com.cn/api/passwd
return 
if sucess  : {
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;:500
            }

message: 400：参数错误
         500：服务器错误    
</code></pre>

<h3>9、上传用户头像</h3>

<pre><code>上传用户头像，文件的类型是图片，大小为 不超过512k，字段的名称为file，token需要同时传过来

url        : file
methord    : post
argument   : token 
             file (file 的字段 name=avatar)
example    : http://c1.skyware.com.cn/api/file
return 
if sucess  : {
                &quot;url&quot;: the url of the img
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 500
            }

message: 400：参数错误
         500：服务器错误    
         501：未能成功创建文件夹
</code></pre>

<h2>设备管理</h2>

<h3>1、扫描并查询设备</h3>

<pre><code>设备在smartlink之前的第一步，是看设备是否在数据库中。

url        : device
methord    : get
argument   : 
             token  
             device 
example    : http://c1.skyware.com.cn/api/device/token/device_sn
return 
if sucess  : {
                &quot;result&quot;: json
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 404
            }

message: 400：参数错误
         500：已经绑定过
         404：设备不存在
</code></pre>

<h3>2、获取设备清单</h3>

<pre><code>url        : devices
methord    : get
argument   : token [get 参数] 
example    : http://c1.skyware.com.cn/api/devices/token
return 
if sucess  : {
                &quot;result&quot;: json
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 500
            }

message: 400：参数错误
         404：没有结果
</code></pre>

<h3>3、更新设备信息</h3>

<pre><code>设备一经连接云平台，立刻进行登录操作，上报设备的基本信息，此时进行入库操作。
用户通过客户端登录后，对设备进行修改，绑定等操作。
首次添加某设备，尚无法查出device_id,通过device_mac 对设备信息进行修改。

url        : device/device_mac
methord    : put
argument   : $token 需要带上

            province                
            city                    
            district                   
            device_name
            device_mac 
            device_sn
            device_lock
            longitude
            latitude  
            radius  
            device_address
            area_id

example    : http://c1.skyware.com.cn/api/device/device_mac
return 
if sucess  : {
                &quot;result&quot;: json  
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 500
            }
message: 400：参数错误
         500：服务器错误    
</code></pre>

<h3>4、绑定设备</h3>

<pre><code>建立用户与设备的绑定关系，,目前尚未做设备和用户已经绑定的关系进行判断


url        : bind
methord    : post
argument   : $device_id
             $token 
example    : http://c1.skyware.com.cn/api/bind
return 
if sucess  : {
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 500
            }

message: 400：参数错误
         500：服务器错误    
</code></pre>

<h3>5、解除绑定</h3>

<pre><code>解除用户与设备的绑定关系,目前尚未做设备和用户已经绑定的关系进行判断

url        : bind
methord    : delete
argument   : device_id [delete 参数] 1_2_4
             token     [delete 参数]
example    : http://c1.skyware.com.cn/api/bind/token/device_id
return 
if sucess  : {
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 500 
            }

message: 400：参数错误
         500：服务器错误
</code></pre>

<h3>6、发送指令</h3>

<pre><code>App 通过 http post 方式向设备发送指令，控制设备

url        : cmd
methord    : post
argument   : device_id  
             token        
             commandv   {&quot;sn&quot;:1,&quot;cmd&quot;:&quot;download&quot;,&quot;data&quot;:[&quot;pw::1&quot;]}

example    : http://c1.skyware.com.cn/api/cmd

return 

if sucess  : {
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 500 
            }

message: 400:参数错误
         404:用户和该设备无绑定关系
         500:连接服务器失败
         501:发送失败
</code></pre>

<h2>运营相关</h2>

<h3>1、根据app_id 下载最新的app version</h3>

<pre><code>url        : app
methord    : get
argument   : app_id [get 参数] 
example    : http://c1.skyware.com.cn/api/app
return 
if sucess  : {
                &quot;result&quot;: json
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 404
            }

message: 400：参数错误
         404：没有结果 
</code></pre>

<h3>2、调取厂家信息</h3>

<pre><code>url        : company
methord    : get
argument   : company_id [get 参数] 
example    : http://c1.skyware.com.cn/api/company
return 
if sucess  : {
                &quot;result&quot;: json
                &quot;message&quot;: 200
             }

if fail    :{
                &quot;message&quot;: 404
            }

message: 400：参数错误
         404：没有结果 
</code></pre>

</body>
</html>